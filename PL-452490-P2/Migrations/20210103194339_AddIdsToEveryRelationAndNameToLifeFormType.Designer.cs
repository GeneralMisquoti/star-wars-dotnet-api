// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PL_452490_P2.Data;

namespace PL_452490_P2.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210103194339_AddIdsToEveryRelationAndNameToLifeFormType")]
    partial class AddIdsToEveryRelationAndNameToLifeFormType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("FightGroupPerson", b =>
                {
                    b.Property<int>("GroupMembersId")
                        .HasColumnType("integer");

                    b.Property<int>("InFightGroupsId")
                        .HasColumnType("integer");

                    b.HasKey("GroupMembersId", "InFightGroupsId");

                    b.HasIndex("InFightGroupsId");

                    b.ToTable("FightGroupPerson");
                });

            modelBuilder.Entity("PL_452490_P2.Models.AbstractLifeFormType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentAbstractLifeFormTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentAbstractLifeFormTypeId");

                    b.ToTable("AbstractLifeFormTypes");
                });

            modelBuilder.Entity("PL_452490_P2.Models.AbstractWeaponType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AbstractWeaponTypes");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("PL_452490_P2.Models.ActorPerMovie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("InMovieId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayedById")
                        .HasColumnType("integer");

                    b.Property<int>("PlaysId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InMovieId");

                    b.HasIndex("PlayedById");

                    b.HasIndex("PlaysId");

                    b.ToTable("ActorsPerMovies");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Blow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("AbstractWeaponTypeId")
                        .HasColumnType("integer");

                    b.Property<long?>("BlowOrderInFight")
                        .HasColumnType("bigint");

                    b.Property<int>("BloweesId")
                        .HasColumnType("integer");

                    b.Property<int>("BlowersId")
                        .HasColumnType("integer");

                    b.Property<long?>("DamageDealt")
                        .HasColumnType("bigint");

                    b.Property<int?>("FightStageId")
                        .HasColumnType("integer");

                    b.Property<int?>("InFightId")
                        .HasColumnType("integer");

                    b.Property<int?>("WithWeaponId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AbstractWeaponTypeId");

                    b.HasIndex("BloweesId");

                    b.HasIndex("BlowersId");

                    b.HasIndex("FightStageId");

                    b.HasIndex("InFightId");

                    b.HasIndex("WithWeaponId");

                    b.ToTable("Blows");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Fight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("InMovieId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InMovieId");

                    b.ToTable("Fights");
                });

            modelBuilder.Entity("PL_452490_P2.Models.FightGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("InFightId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InFightId");

                    b.ToTable("FightGroups");
                });

            modelBuilder.Entity("PL_452490_P2.Models.FightStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("FightId")
                        .HasColumnType("integer");

                    b.Property<int>("FirstGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("Result")
                        .HasColumnType("integer");

                    b.Property<int>("ResultId")
                        .HasColumnType("integer");

                    b.Property<int>("SecondGroupId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FightId");

                    b.HasIndex("FirstGroupId");

                    b.HasIndex("SecondGroupId");

                    b.ToTable("FightStages");
                });

            modelBuilder.Entity("PL_452490_P2.Models.LifeFormType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("AbstractLifeFormTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AbstractLifeFormTypeId");

                    b.ToTable("LifeFormTypes");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("ActorId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BoxOffice")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("ChronologicalOrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<LocalDate?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<long>("TmdbId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("AbstractWeaponTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("ApprenticeId")
                        .HasColumnType("integer");

                    b.Property<string>("ForceType")
                        .HasColumnType("VARCHAR(24)");

                    b.Property<int?>("FromPlanetId")
                        .HasColumnType("integer");

                    b.Property<int?>("LFTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("MasterId")
                        .HasColumnType("integer");

                    b.Property<long?>("MidichlorianCount")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AbstractWeaponTypeId");

                    b.HasIndex("FromPlanetId");

                    b.HasIndex("LFTypeId");

                    b.HasIndex("MasterId")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("NumMoons")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("1");

                    b.Property<long?>("NumSuns")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("1");

                    b.Property<decimal?>("Population")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("WeaponTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WeaponTypeId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("PL_452490_P2.Models.WeaponOwners", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("WeaponId")
                        .HasColumnType("integer");

                    b.Property<long>("WeaponOwnerOrder")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("WeaponId");

                    b.ToTable("WeaponOwners");
                });

            modelBuilder.Entity("FightGroupPerson", b =>
                {
                    b.HasOne("PL_452490_P2.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("GroupMembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PL_452490_P2.Models.FightGroup", null)
                        .WithMany()
                        .HasForeignKey("InFightGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PL_452490_P2.Models.AbstractLifeFormType", b =>
                {
                    b.HasOne("PL_452490_P2.Models.AbstractLifeFormType", "ParentAbstractLifeFormType")
                        .WithMany()
                        .HasForeignKey("ParentAbstractLifeFormTypeId");

                    b.Navigation("ParentAbstractLifeFormType");
                });

            modelBuilder.Entity("PL_452490_P2.Models.ActorPerMovie", b =>
                {
                    b.HasOne("PL_452490_P2.Models.Movie", "InMovie")
                        .WithMany("ActorsPerMovies")
                        .HasForeignKey("InMovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PL_452490_P2.Models.Actor", "PlayedBy")
                        .WithMany()
                        .HasForeignKey("PlayedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PL_452490_P2.Models.Person", "Plays")
                        .WithMany("ActorPerMovies")
                        .HasForeignKey("PlaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InMovie");

                    b.Navigation("PlayedBy");

                    b.Navigation("Plays");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Blow", b =>
                {
                    b.HasOne("PL_452490_P2.Models.AbstractWeaponType", null)
                        .WithMany("InBlows")
                        .HasForeignKey("AbstractWeaponTypeId");

                    b.HasOne("PL_452490_P2.Models.FightGroup", "Blowees")
                        .WithMany()
                        .HasForeignKey("BloweesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PL_452490_P2.Models.FightGroup", "Blowers")
                        .WithMany()
                        .HasForeignKey("BlowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PL_452490_P2.Models.FightStage", null)
                        .WithMany("Blows")
                        .HasForeignKey("FightStageId");

                    b.HasOne("PL_452490_P2.Models.Fight", "InFight")
                        .WithMany()
                        .HasForeignKey("InFightId");

                    b.HasOne("PL_452490_P2.Models.Weapon", "WithWeapon")
                        .WithMany()
                        .HasForeignKey("WithWeaponId");

                    b.Navigation("Blowees");

                    b.Navigation("Blowers");

                    b.Navigation("InFight");

                    b.Navigation("WithWeapon");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Fight", b =>
                {
                    b.HasOne("PL_452490_P2.Models.Movie", "InMovie")
                        .WithMany()
                        .HasForeignKey("InMovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InMovie");
                });

            modelBuilder.Entity("PL_452490_P2.Models.FightGroup", b =>
                {
                    b.HasOne("PL_452490_P2.Models.Fight", "InFight")
                        .WithMany()
                        .HasForeignKey("InFightId");

                    b.Navigation("InFight");
                });

            modelBuilder.Entity("PL_452490_P2.Models.FightStage", b =>
                {
                    b.HasOne("PL_452490_P2.Models.Fight", null)
                        .WithMany("Stages")
                        .HasForeignKey("FightId");

                    b.HasOne("PL_452490_P2.Models.FightGroup", "FirstGroup")
                        .WithMany()
                        .HasForeignKey("FirstGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PL_452490_P2.Models.FightGroup", "SecondGroup")
                        .WithMany()
                        .HasForeignKey("SecondGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FirstGroup");

                    b.Navigation("SecondGroup");
                });

            modelBuilder.Entity("PL_452490_P2.Models.LifeFormType", b =>
                {
                    b.HasOne("PL_452490_P2.Models.AbstractLifeFormType", "AbstractLifeFormType")
                        .WithMany()
                        .HasForeignKey("AbstractLifeFormTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AbstractLifeFormType");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Movie", b =>
                {
                    b.HasOne("PL_452490_P2.Models.Actor", null)
                        .WithMany("InMovies")
                        .HasForeignKey("ActorId");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Person", b =>
                {
                    b.HasOne("PL_452490_P2.Models.AbstractWeaponType", null)
                        .WithMany("UsedBy")
                        .HasForeignKey("AbstractWeaponTypeId");

                    b.HasOne("PL_452490_P2.Models.Planet", "FromPlanet")
                        .WithMany()
                        .HasForeignKey("FromPlanetId");

                    b.HasOne("PL_452490_P2.Models.LifeFormType", "LFType")
                        .WithMany()
                        .HasForeignKey("LFTypeId");

                    b.HasOne("PL_452490_P2.Models.Person", "Master")
                        .WithOne("Apprentice")
                        .HasForeignKey("PL_452490_P2.Models.Person", "MasterId");

                    b.Navigation("FromPlanet");

                    b.Navigation("LFType");

                    b.Navigation("Master");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Weapon", b =>
                {
                    b.HasOne("PL_452490_P2.Models.AbstractWeaponType", "WeaponType")
                        .WithMany("WeaponsOfType")
                        .HasForeignKey("WeaponTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeaponType");
                });

            modelBuilder.Entity("PL_452490_P2.Models.WeaponOwners", b =>
                {
                    b.HasOne("PL_452490_P2.Models.Person", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PL_452490_P2.Models.Weapon", "Weapon")
                        .WithMany("WeaponOwners")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("PL_452490_P2.Models.AbstractWeaponType", b =>
                {
                    b.Navigation("InBlows");

                    b.Navigation("UsedBy");

                    b.Navigation("WeaponsOfType");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Actor", b =>
                {
                    b.Navigation("InMovies");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Fight", b =>
                {
                    b.Navigation("Stages");
                });

            modelBuilder.Entity("PL_452490_P2.Models.FightStage", b =>
                {
                    b.Navigation("Blows");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Movie", b =>
                {
                    b.Navigation("ActorsPerMovies");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Person", b =>
                {
                    b.Navigation("ActorPerMovies");

                    b.Navigation("Apprentice");
                });

            modelBuilder.Entity("PL_452490_P2.Models.Weapon", b =>
                {
                    b.Navigation("WeaponOwners");
                });
#pragma warning restore 612, 618
        }
    }
}
